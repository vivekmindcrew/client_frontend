{"version":3,"sources":["config/Config.js","views/Subscription/subCtrl/subscriptionCtrl.js","views/Pages/addMailChimpPage.js"],"names":["config","baseUrl","cryptr","require","subscrptiondataObject","getSubscription","callback","a","axios","method","url","data","then","response","catch","err","console","log","userLogin","swal","icon","userLogout","userRegister","resetPassword","submitPassword","createCustomer","addCard","getLeads","addNewCounty","getCountyName","checkCoupon","getCustomers","getAllSubscribedUsers","getTileData","downloadLeads","cancelSubscription","subId","addMailchimpIdFun","addTemplateFun","addContactFun","userData","AddMailChimpPage","history","useHistory","useState","mailchimpId","setAddMailchimpId","MailchimpApiKeyValue","localStorage","getItem","className","style","fontFamily","color","fontSize","margin","textAlign","fontWeight","md","sm","href","target","addonType","type","name","value","onChange","e","placeholder","backgroundColor","marginTop","marginBottom","variant","onClick","userId","title","text","SubCtrl","result","status","setItem","push","msg","padding","alignItems"],"mappings":"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","file":"static/js/22.b0da5ea3.chunk.js","sourcesContent":["const Cryptr = require('cryptr');\r\nconst cryptr = new Cryptr('restopos@36547858');\r\nconst config = {\r\n //baseUrl: \"https://www.clientconnect.ai:3308\",\r\n//  baseUrl: \"http://localhost:3308\",\r\n   baseUrl: \"http://3.137.189.97:3308\",\r\n    cryptr: cryptr\r\n}\r\n\r\nexport default config;","// import series from 'async/series';\r\nimport swal from 'sweetalert';\r\n\r\nimport axios from 'axios';\r\nimport config from '../../../config/Config';\r\n\r\nconst subscrptiondataObject = {\r\n    getSubscription: async (callback) => {\r\n        axios({\r\n            method: 'POST',\r\n            url: config.baseUrl + '/subscription/stripe/listOfPlans',\r\n            data: {\r\n\r\n            }\r\n        }).then(response => {\r\n            return callback(response);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    },\r\n    userLogin: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/login/login\",\r\n            data: data,\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    userLogout: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/login/logout\",\r\n            data: data\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        })\r\n    },\r\n    userRegister: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/login/register\",\r\n            data: data,\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    resetPassword: async (data, callback) => {\r\n        axios({\r\n            method: 'POST',\r\n            url: config.baseUrl + '/login/forgetPassword',\r\n            data: data\r\n        }).then(response => {\r\n            return callback(response);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n                swal(\"Please check internet connection or try again\", {\r\n                    icon: \"error\",\r\n                });\r\n            });\r\n    },\r\n    submitPassword: async (data, callback) => {\r\n        axios({\r\n            method: 'POST',\r\n            url: config.baseUrl + '/login/submitPassword',\r\n            data: data\r\n        }).then(response => {\r\n            return callback(response);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n                swal(\"Please check internet connection or try again\", {\r\n                    icon: \"error\",\r\n                });\r\n            });\r\n    },\r\n    createCustomer: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/subscription/createcustomer\",\r\n            data: data,\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    addCard: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/subscription/addcard\",\r\n            data: data,\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    getLeads: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/login/leads\",\r\n            data: data\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    addNewCounty: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/login/addNewCounty\",\r\n            data: data,\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    getCountyName: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/login/getAllCounty\",\r\n            data: data\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    checkCoupon: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/subscription/retrivecoupon\",\r\n            data: data\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    getCustomers: async (callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/subscription/getallcustomers\",\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    getAllSubscribedUsers: async (callback) => {\r\n        axios({\r\n            method: \"GET\",\r\n            url: config.baseUrl + \"/subscription/getallsubscriptions\",\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    getTileData: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/login/getTileData\",\r\n            data: data\r\n        }).then((response) => {\r\n            console.log(response);\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    downloadLeads: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/login/leadsDownload\",\r\n            data: data\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    cancelSubscription: async (subId, callback) => {\r\n        axios({\r\n            method: 'POST',\r\n            url: config.baseUrl + '/subscription/stripe/cancelSubscription/' + subId + '',\r\n            data: {\r\n\r\n            }\r\n        }).then(response => {\r\n            return callback(response);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    },\r\n    addMailchimpIdFun: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/mailchimp/addAudience\",\r\n            data: data,\r\n        }).then((response) => {\r\n            // console.log(response.data.status);\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    addTemplateFun: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/mailchimp/addTemplate\",\r\n            data: data,\r\n        }).then((response) => {\r\n            // console.log(response.data.status);\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    addContactFun: async (userData, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/mailchimp/addContact\",\r\n            data: userData,\r\n        }).then((response) => {\r\n            // console.log(response,\"contact res\");\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    cancelSubscription: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/subscription/stripe/cancelSubscription\",\r\n            data: data\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    createTem: async (data, callback) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: config.baseUrl + \"/mailchimp/addTemplatenew\",\r\n            data: data,\r\n            // headers:{\"content-type\":\"multipart/form-data\"}\r\n        }).then((response) => {\r\n            return callback(response);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            swal(\"Please check internet connection or try again\", {\r\n                icon: \"error\",\r\n            });\r\n        });\r\n    },\r\n    // updateTem: async (data, callback) => {\r\n    //     axios({\r\n    //         method: \"POST\",\r\n    //         url: config.baseUrl + \"/mailchimp/updateTemplatenew\",\r\n    //         data: data\r\n    //     }).then((response) => {\r\n    //         return callback(response);\r\n    //     }).catch((err) => {\r\n    //         console.log(err)\r\n    //         swal(\"Please check internet connection or try again\", {\r\n    //             icon: \"error\",\r\n    //         });\r\n    //     });\r\n    // },\r\n}\r\nexport default subscrptiondataObject;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\r\nimport swal from \"sweetalert\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SubCtrl from \"../Subscription/subCtrl/subscriptionCtrl\";\r\nimport { Divider } from '@material-ui/core';\r\n\r\nfunction AddMailChimpPage() {\r\n  const history = useHistory();\r\n  const [mailchimpId, setAddMailchimpId] = useState(\"\");\r\n\r\n  function handle(e) {\r\n    setAddMailchimpId(e.target.value);\r\n  }\r\n\r\n  function handleClick() {\r\n    var userId = localStorage.getItem(\"userId\");\r\n     \r\n    if (mailchimpId === \"\") {\r\n      swal({\r\n        title: \"Error!\",\r\n        text: \" Please enter your Mailchimp API Key\",\r\n        icon: \"error\",\r\n      });\r\n      return false;\r\n    }\r\n    let data = {\r\n      mailchimpId: mailchimpId,\r\n      userId: userId\r\n    }\r\n    // console.log(data);\r\n    SubCtrl.addMailchimpIdFun(data, (result) => {\r\n      if (result.data.status === true) {\r\n        //  console.log(\"Mailchimp Id added\", result.data.status); \r\n\r\n        localStorage.setItem(\"MailchimpApiKey\", mailchimpId);\r\n        // history.push('/home/user/addMailchimp/');\r\n        // SubCtrl.addTemplateFun(data, (result) => {\r\n        //   console.log(\"Mailchimp Id added\", result.data.status);\r\n        //   if (result.data.status === true) {\r\n            swal({\r\n              title: \"Congratulations!\",\r\n              text: \"You are successfully connected to Mailchimp\",\r\n              icon: \"success\",\r\n            });\r\n           history.push('/home/user/mailchampEdit')\r\n        //   }\r\n        // })\r\n             //  history.push('/home/user/mailchampEdit')\r\n\r\n      } else if (result.data.msg === \"API KEY Inserted but audience creation failed. Please check your API KEY\") {\r\n        swal({\r\n          title: \"Error!\",\r\n          text: \"Please check your API KEY.\",\r\n          icon: \"error\",\r\n        });\r\n\r\n\r\n      } else if (result.data.msg === \"User not found\") {\r\n        swal({\r\n          title: \"Error!\",\r\n          text: \"User not found\",\r\n          icon: \"error\",\r\n        });\r\n      } else if (result.data.msg === \"Error\") {\r\n        swal({\r\n          title: \"Error!\",\r\n          text: \"Error in connecting with server\",\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  var MailchimpApiKeyValue = localStorage.getItem(\"MailchimpApiKey\");\r\n  return (\r\n    <div className=\" \" style={{ fontFamily: 'Poppins' }}>\r\n      {(MailchimpApiKeyValue === 'null' || MailchimpApiKeyValue === '(NULL)' || MailchimpApiKeyValue === '') ? (\r\n        <Container>\r\n          <h2 style={{ color: \"#0d3559\", fontFamily: \"Poppins\", fontSize: 35, margin: 30, textAlign: \"center\", fontWeight: \"bold\" }}>\r\n            Automate Solicitations with MailChimp®\r\n                  </h2>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"8\" sm=\"12\">\r\n              <CardGroup>\r\n                <Card className=\"pt-4\">\r\n                  <CardBody>\r\n                    <Form>\r\n                      <p className=\"text-muted pb-2\" style={{ textAlign: \"center\", fontSize: 20 }}>\r\n                        Enter your <a href=\"https://us7.admin.mailchimp.com/account/api/\" target=\"blank\">Mailchimp API Key</a>\r\n                      </p>\r\n                      <Row className=\"justify-content-center\">\r\n\r\n                        <InputGroup className=\"col-12\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"icon-key\"></i>\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input type=\"text\" name=\"mailchimpKey\"\r\n                            value={mailchimpId}\r\n                            onChange={handle} placeholder=\" API Key\" />\r\n                        </InputGroup>\r\n                      </Row>\r\n                      <Row className=\"pl-4 ml-4 mt-2\">\r\n                        <p style={{ fontSize: 13 }}>\r\n                          Don’t have a MailChimp account? Create one for free\r\n                          <a href=\"https://login.mailchimp.com/signup/\" target=\"blank\"> here</a>.\r\n </p>\r\n                      </Row>\r\n                      <Row className=\"justify-content-center\">\r\n                        <Button type=\"button\" style={{ backgroundColor: \"#0d3559\", color: \"white\", marginTop: 20, marginBottom: 20 }} variant=\"contained\" onClick={handleClick} className=\"px-4\">Submit</Button>\r\n\r\n                      </Row>\r\n                      <Row className=\"justify-content-center\">\r\n                        <p style={{ fontSize: 13, padding: 0, margin: 0, alignItems: \"center\" }}>\r\n                          Once you’ve shared your API key with us,\r\n                            </p>\r\n                      </Row>\r\n                      <Row className=\"justify-content-center\">\r\n                        <p style={{ fontSize: 13, padding: 0, margin: 0 }}>\r\n                          check out our guide on\r\n                        <a href=\"https://www.clientconnect.ai/automation/\" target=\"blank\"> setting up your first automation</a>.\r\n                        </p>\r\n                      </Row>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (<Container>\r\n        <h2 style={{ color: \"#0d3559\", fontFamily: \"Poppins\", fontSize: 35, margin: 40, textAlign: \"center\", fontWeight: \"bold\" }}>\r\n          Automate Solicitations with MailChimp®\r\n       </h2>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\" sm=\"12\">\r\n            <CardGroup>\r\n              <Card className=\"p-4\">\r\n                <CardBody>\r\n                  <Form>\r\n                    {/* <p className=\"text-muted\" style={{ textAlign: \"center\", fontSize: 20 }}>\r\n                      <h3  style={{ color: \"black\", fontFamily: \"Poppins\", fontSize: 25, margin: 40, textAlign: \"center\", fontWeight: \"bold\" }}>\r\n                        API Key <br />\r\n                      </h3>\r\n                      <h2  style={{ color: \"black\", border:\"solid 2px\",  fontFamily: \"Poppins\", fontSize: 25, margin: 40, textAlign: \"center\", fontWeight: \"normal\" }}>\r\n                      {MailchimpApiKeyValue} \r\n                      </h2>\r\n                    </p> */}\r\n                    <Row className=\"justify-content-center\">\r\n                      <p style={{ fontSize: 17, margin: 10, fontFamily: \"Poppins\" }}> Please Check out our guide on\r\n                        <a href=\"https://www.clientconnect.ai/automation/\" target=\"blank\"> setting up your first automation</a>.\r\n                        </p>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </CardGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddMailChimpPage;\r\n"],"sourceRoot":""}