{"version":3,"sources":["_nav.js","routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["firmname","localStorage","getItem","countiesName","countiesButtons","user","countyPracticeN","countyPracticeNames","undefined","console","log","JSON","parse","map","c","i","push","countypractice","name","url","icon","value","title","wrapper","element","attributes","color","class","items","Dashboard","React","lazy","Colors","Typography","AddMailChimpPage","MailChampEdit","ManageSubscriptionpage","routes","path","exact","component","DefaultAside","DefaultFooter","DefaultHeader","DefaultLayout","props","loading","className","style","fontFamily","fixed","fallback","display","navConfig","navigation","router","Container","fluid","route","idx","key","render"],"mappings":"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","file":"static/js/29.8bf391f4.chunk.js","sourcesContent":["\r\nvar firmname = localStorage.getItem(\"firmname\");\r\nvar countiesName = [];\r\nvar countiesButtons = {};\r\nvar user = [];\r\nvar countyPracticeN = localStorage.getItem(\"SubscribedCounties\");\r\nvar countyPracticeNames = '';\r\n\r\nif (countyPracticeN !== '' && countyPracticeN !== undefined && countyPracticeN !== null && countyPracticeN !== 'undefined') {\r\n  console.log(countyPracticeNames);\r\n  countyPracticeNames = JSON.parse(countyPracticeN);\r\n  countiesButtons = countyPracticeNames.map((c, i) => {\r\n    // console.log(\"map\", c.countypractice);\r\n    countiesName.push(c.countypractice);\r\n    return ({\r\n      name: c.countypractice,\r\n      url: '/home/user/leads/' + c.countypractice,\r\n      icon: 'icon-list',\r\n      value: c.countypractice\r\n    })\r\n  })\r\n  user = [\r\n    {\r\n      title: true,\r\n      name: \"WELCOME \" + [firmname],\r\n      wrapper: {\r\n        element: '',\r\n        attributes: { color: \"Black\" }\r\n      },\r\n      class: ''\r\n    },\r\n    ...countiesButtons,\r\n    {\r\n      title: true,\r\n      name: \"\",\r\n      wrapper: {\r\n        element: '',\r\n        attributes: { color: \"Black\" }\r\n      },\r\n      class: ''\r\n    },\r\n    {\r\n      name: \"Automation\",\r\n      url: '/home/user/addMailchimp',\r\n      icon: 'fa fa-cog',\r\n    },\r\n\r\n    {\r\n      name: \"Email Templates (Beta)\",\r\n      url: '/home/user/getAllTemplate',\r\n       icon: 'fa fa-file-text',\r\n    },\r\n\r\n    // {\r\n    //   title: true,\r\n    //   name: \"\",\r\n    //   wrapper: {\r\n    //     element: '',\r\n    //     attributes: { color: \"Black\" }\r\n    //   },\r\n    //   class: ''\r\n    // },\r\n    {\r\n      name: \"Manage Subscription\",\r\n      url: '/home/user/manageSubscription',\r\n      icon: 'icon-plus',\r\n    },\r\n    // {\r\n    //   name: \"Update Template\",\r\n    //   url: '/home/user/updateTemplate',\r\n    //    icon: 'icon-plus',\r\n    // },\r\n  ];\r\n} else {\r\n  //alert(\"else\")\r\n}\r\n\r\n\r\nvar admin = [\r\n  {\r\n    title: true,\r\n    name: 'Admin',\r\n    wrapper: {\r\n      element: '',\r\n      attributes: {}\r\n    },\r\n  },\r\n  {\r\n    name: 'User Subscription',\r\n    url: '/home/user/user-management',\r\n    icon: 'fa fa-play',\r\n  },\r\n];\r\n\r\nvar match_token = localStorage.getItem(\"ADMIN\");\r\nvar usableRoute = [];\r\n// console.log(\"match_token:::::\", match_token);\r\n\r\nif (match_token === 'true') {\r\n  usableRoute = admin;\r\n}\r\nelse {\r\n  usableRoute = user;\r\n\r\n}\r\n\r\nexport default {\r\n\r\n  items: usableRoute\r\n};","import React from 'react';\r\n\r\nconst Dashboard = React.lazy(() => import('./views/Dashboard'));\r\n//const CoreUIIcons = React.lazy(() => import('./views/Icons/CoreUIIcons'));\r\nconst Colors = React.lazy(() => import('./views/Theme/Colors'));\r\nconst Typography = React.lazy(() => import('./views/Theme/Typography/Typography.js'));\r\n// const AddCounty = React.lazy(() => import('./views/Subscription/addCounty'));\r\nconst AddMailChimpPage = React.lazy(() => import('./views/Pages/addMailChimpPage'));\r\nconst MailChampEdit = React.lazy(() => import('./views/Pages/MailChampEdit'));\r\n// const AddMailChimpPage = React.lazy(() => import('./views/Pages/addMailChimpPage'));\r\nconst ManageSubscriptionpage = React.lazy(() => import('./views/Subscription/manageSubscriptionpage'));\r\nconst NoCounty = React.lazy(() => import('./views/Theme/Typography/NoCounty'));\r\nconst UpdateTemplate = React.lazy(() => import('./views/Pages/UpdateTemplate'));\r\nconst GetAllTemplate = React.lazy(() => import('./views/Pages/GetAllTemplate'));\r\n\r\nconst routes = [\r\n  { path: '/home', exact: true, name: \"Home\" },\r\n  { path: '/home/dashboard', name: 'Dashboard', component: Dashboard },\r\n  { path: '/home/user', exact: true, name: 'User', component: Colors },\r\n  { path: '/home/user/user-management', name: 'User Subscription', component: Colors },\r\n  { path: '/home/user/county', name: 'Leads', component: NoCounty },\r\n  { path: '/home/user/leads/:county', name: 'Leads', component: Typography },\r\n  { path: '/home/user/addMailchimp', name: 'MailChimp', component: AddMailChimpPage },\r\n  { path: '/home/user/manageSubscription', name: 'MailChimp', component: ManageSubscriptionpage },\r\n  { path: '/home/user/mailchampEdit', name: 'mailchamp Edit', component: MailChampEdit },\r\n  // { path: '/home/user/updateTemplate/:id', name: 'update template', component: UpdateTemplate },\r\n  { path: '/home/user/updateTemplate/:id/:uid', name: 'update template', component: UpdateTemplate },\r\n //{ path: '/home/user/updateTemplate', name: 'update template', component: UpdateTemplate },\r\n  { path: '/home/user/getAllTemplate', name: 'get all template', component: GetAllTemplate }\r\n\r\n];\r\n\r\nexport default routes;\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport * as router from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\n \r\nimport {\r\n  AppAside,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppSidebarNav2 as AppSidebarNav,\r\n} from '@coreui/react';\r\n// sidebar nav config\r\nimport navigation from '../../_nav';\r\n//import navigation1 from '../../nav1'\r\n// routes config\r\nimport routes from '../../routes';\r\n\r\nconst DefaultAside = React.lazy(() => import('./DefaultAside'));\r\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\r\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\r\n\r\nfunction DefaultLayout(props) {\r\n\r\n  const loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n  \r\n  return (\r\n    <div className=\"app\" style={{ fontFamily: 'Poppins' }}>\r\n      <AppHeader fixed>\r\n        <Suspense fallback={loading()}>\r\n          <DefaultHeader />\r\n        </Suspense>\r\n      </AppHeader>\r\n      <div className=\"app-body\">\r\n        <AppSidebar fixed display=\"lg\" >\r\n          <AppSidebarHeader />\r\n          <AppSidebarForm />\r\n          <Suspense>\r\n            <AppSidebarNav navConfig={navigation} {...props} router={router} />\r\n          </Suspense>\r\n          <AppSidebarFooter />\r\n          <AppSidebarMinimizer />\r\n        </AppSidebar>\r\n        <main className=\"main\">\r\n          {/* <AppBreadcrumb appRoutes={routes} router={router} /> */}\r\n          <Container fluid>\r\n            <Suspense fallback={loading()}>\r\n              <Switch>\r\n                {routes.map((route, idx) => {\r\n                  return route.component ? (\r\n                    <Route\r\n                      key={idx}\r\n                      path={route.path}\r\n                      exact={route.exact}\r\n                      name={route.name}\r\n                      render={props => (\r\n                        <route.component {...props} />\r\n                      )} />\r\n                  ) : (null);\r\n                })}\r\n              </Switch>\r\n            </Suspense>\r\n          </Container>\r\n        </main>\r\n        <AppAside fixed>\r\n          <Suspense fallback={loading()}>\r\n            <DefaultAside />\r\n          </Suspense>\r\n        </AppAside>\r\n      </div>\r\n      <AppFooter>\r\n        <Suspense fallback={loading()}>\r\n          <DefaultFooter />\r\n        </Suspense>\r\n      </AppFooter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DefaultLayout;\r\n"],"sourceRoot":""}